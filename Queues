class Node {
    constructor (value) {
        this.value = value;
        this.next = null;
    }
}

class Queue {
    constructor (){
        this.first = null;
        this.last = null;
        this.size = 0;
    }

    enqueue (value){
        let node = new Node(value);

        if (!this.first){
            this.first = node;
            this.last = node;
        } else {
            let tail = this.last;
            tail.next = node;
        }

        return ++this.size;
    }

    dequeue (){
        if (this.size === 0) return null;
        let popped = this.first;
        if (this.size === 1){
            this.first = null;
            this.last = null;
            this.size--;
            return popped;
        }

        this.first = popped.next;
        popped.next = null;
        this.size--;
        return popped;
    }
}

let stack = new Queue();

stack.enqueue(8);
stack.enqueue(5);
console.log(stack);
console.log(stack.dequeue());
